#include "p16F887.inc"
  
    list p=16f887

;; CONFIG1
;; __config 0xE3F4
; __CONFIG _CONFIG1, _FOSC_INTRC_NOCLKOUT & _WDTE_OFF & _PWRTE_OFF & _MCLRE_ON & _CP_OFF & _CPD_OFF & _BOREN_ON & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
;; CONFIG2
;; __config 0xFFFF
; __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF 
 
 
 __CONFIG _CONFIG1, 0XE234
 __CONFIG _CONFIG2, 0XFEFF 
 
    CBLOCK  0X70        ;DIRECCIONAMOS EL REGISTRO DE PROPOSITO GENERAL
    UNID
    UNIDADES
    DECENAS
    CENTENAS
    CONT
    D3
    D2
    D1
    NUM_TABLA
    NUM_S
    AUX
    endC

    ORG     .0          ;ORG DIRECCION DONDE ARRANCA EL PROGRAMA (MEMORIA DEL PROGRAMA)
    GOTO    INICIO      ;RETORNO DE ETIQUETA DE INICO DEL PROGRAMA
    ORG     .5          ;SALTO DE 0 A LA POSICION 5 DE MEMORIA AL ARRANCAR EL PROGRAMA
INICIO:
;------------------- DIRRECIONAMIENTO DEL BANCO -----------------------------
        BSF     STATUS,RP0  ; CONFIGURACION DIRECCIONAR EL BANCO 1
        BCF     STATUS,RP1  ; CONFIGURACION DIRECCIONAR EL BANC0 1
;----------------------------------------------------------------------------
;------------------- CONFIGURACION DE LOS PUERTOS I/O PORTS------------------
;-- Configurando el TRIS se determina el pueto A o B como entrada o salida --
;----------------------------------------------------------------------------
        CLRF    TRISB       ;configuramos el puerto B en ceros con CLRf
        MOVLW   0XFF        ;MUEVE EL VALOR DE UNA CONSTANTE A W TODO EN 1 OXFF
        MOVWF   TRISA       ;CONFIGURA LOS BITS DEL PUERTO A TRISA EN UNO MOVIENDO W A F
        BANKSEL OSCCON
        MOVLW   0XF1
        MOVWF   OSCCON
        BANKSEL TRISC
        CLRF    TRISC
        BANKSEL TRISC
        MOVLW   B'00001111'
        MOVWF   TRISC
	MOVLW	B'111'
	MOVWF	TRISE
        BANKSEL ANSEL
        MOVLW   0X0
        MOVWF   ANSELH      ;ANSELH REFERENCIA AL PUERTO B  CLRF PARA ENTRADA O SALIDA DIGITAL
        CLRF    ANSEL       ;ANSEL SE COFIGURA COMO CERO PARA ENTRADA Y SALIDAS DIGITALES CON CLRF
        CLRF    ANSEL       ;ANSEL SE COFIGURA COMO CERO PARA ENTRADA Y SALIDAS DIGITALES CON CLRF
;-----------------------------------------------------------------------------
        BANKSEL PORTB       ;BANKSEL DIRECCIONA EL BANCO Y EL REGISTRO DE UNA AL BANCO 1
        CLRF    PORTB       ;PONEMOS A CERO TODOS LOS PUERTOS DE B PARA LA ENTRADA DEL PROGRAMA
        BANKSEL PORTC
        CLRF    PORTC
	CLRF    PORTE
	CLRF	NUM_TABLA
	CLRF	AUX

;------------------------------------------------------------------------------
;-----------------------------------------------------------------------------
;----------------- CREACION DE CONDICIONALES PARA EL RESETEO Y LA PRECARGA ------------------------
	
CLEAR	BTFSS	PORTE,0	    ;BTFSS HACE QUE SE TESTEE EL BIT RE0 COMO ENTRADA DE CONTROL DE REINICIO DEL CONTEO
	GOTO	CONTAR	    ;SE GENERA EL CONDICIONAL A PARTIR DEL TESTEO ANTERIOR PARA GENERAR UN SALTO EN EL PROGRAMA SEGUN SEA EL BIT 1 O 0
	GOTO	CEROS	    
	
CONTAR	
	BTFSS  PORTE,1	    ;SE TESTEA RE1 COMO ENTRADA DE CONTROL PARA LA PRECARGA
	GOTO   DOS
	GOTO	PREL

CEROS	CLRF	CONT	    ;CUANDO OCURRE EL SALTO DESDE EL BTFSS SE LIMPIA EL REGISTRO CONT
	GOTO	DOS	    ;SE  GENERA UN SALTO EN EL PROGRAMA
	
PREL	
        MOVF    PORTA,W     ;TOMO EL DATO DEL PUERTO A Y SE MUEVE AL REGISRO W
	MOVWF	CONT	    ;DE W PASA AL REGISTRO DONDE ESTA EL CONTADOR, CON LO QUE LA INFORMACION EN PORTA PASA AL CONTADOR
	GOTO	TRES	    ;DE SE SALTA DIRECTAMENTE AL ENMASCARAMIENTO SIN INCREMENTAR PARA PODER MOSRAR LA PRECARGA
	
DOS
	INCF	CONT,F
	MOVF	CONT,W
TRES	GOTO	UNO
;	MOVLW	.255
;	XORWF	CONT,W
;	BTFSS	STATUS,Z
;	GOTO	DOS
;	GOTO	INICIO
	
UNO	
	MOVWF   UNID        ;MUEVO EL PORTA A REGISTRO
        MOVLW   0XFF        ;ENMASCARAMIENTO
        ANDWF   UNID,W      ;PASO LOS TRES PRIMEROS BITS BAJOS
        MOVWF   UNIDADES    ;CONTIENE EL DATOS DE LOS PUERTOS
        CLRF    DECENAS
        CLRF    CENTENAS


BCD_RESTA
        MOVLW   .10         ;A LAS UNIDADES SE LE VA RESTANDO 10 EN CADA PASADA
        SUBWF   UNIDADES,W  ;W=10 UNIDADES -10
        BTFSS   STATUS,C    ;¿c=1? ¿W POSITIVO? ¿UNIDADES >= 10?
        GOTO    BIN_BCD_FIN ;NO ES MENOR A 10 SE ACABO

BCD_INCREMETA_DECENAS
        MOVWF   UNIDADES    ;RECUPERA LO QUE QUEDA DE LA RESTA
        INCF    DECENAS,F   ;INCRREMENTA LAS DECENAS Y COMPRUEBA SI LLEGA A 10
        MOVLW   .10         ;MOVEMOS 10 A W
        SUBWF   DECENAS,W   ;W= DECENAS - 10
        BTFSS   STATUS,C    ;¿c=1? ¿W POSITIVO? ¿DECENAS >= 10?
        GOTO    BCD_RESTA   ;NO VUELVE A PASAR RESTANDOLE 10

BCD_INCREMENTA_CENTENAS
        CLRF    DECENAS     ;PONE A CERO LAS DECENAS
        INCF    CENTENAS,F  ;INCREMENTA LA CENTENAS
        GOTO    BCD_RESTA   ;RESTA 10 A UNID

BIN_BCD_FIN
        SWAPF   CENTENAS,W   ;EN NIBBLE ALTO DE W
        ADDWF   DECENAS,W    ;EN NIBBLE BAJO DE W
        MOVWF   PORTB
	CALL	RETARDO
        SWAPF   UNIDADES,W   ;EN NIBBLE ALTO DE W
        MOVWF   PORTC
	CALL	RETARDO	    ;SE LLAMA A LA RUTINA DE RETARDO PARA PODER VIUALIZAR POR UN SEGUNDO
	GOTO	COMPARA	    ;SE SALTA A LA ETIQUETA COMPARA
	GOTO	CLEAR	    ;SE SALTA AL INICIO
	
TABLA
	MOVF    NUM_TABLA,W	;LA RUTINA TABLA CARGA UN 0 EN NUM_TABLA PARA ASI TRASLADAR EL APUNTADOR A 0
        CALL    TABLA_SEC1	;LLAMADO A LA TABLA
        MOVWF   PORTB		;MUEVE EL CONTENIDO DE LA POSICION EN TABLA AL PUERTOB
        CALL    RETARDO		;SE LLAMA EL RETARDO PARA PODER VER LA INFORMACION
	;-----MODIFICACION AGREGANDO EL CONDICIONAL DEL RESET-------
	BTFSS	PORTE,0	    ;BTFSS HACE QUE SE TESTEE EL BIT RE0 COMO ENTRADA DE CONTROL DE REINICIO DEL CONTEO
	GOTO	$+2	    ;SE GENERA EL CONDICIONAL A PARTIR DEL TESTEO ANTERIOR PARA GENERAR UN SALTO EN EL PROGRAMA SEGUN SEA EL BIT 1 O 0
	GOTO	CEROS		
        INCF    NUM_TABLA,F	;SE AUMENTA LA POSICION DEL APUNTADOR PARA ACCEDER A LA SIGUIENTE POSICION EN LA TABLA
	MOVLW	.12		;SE MUEVE UN 12 (12 POSICIONES DE LA TABLA) A W PARA COMPARARLO CON
	XORWF	NUM_TABLA,W	;EL NUMERO DE APUNTADOR, Y REALIZAR EL CICLO HASTA COMPLETAR LA TABLA
	BTFSS	STATUS,Z	;SE TESTEA LA BANDERA CERO 
	GOTO	$-10		;SI NO A LLEGADO A 12, SE VUELVE A REPETIR LA RUTINA
	;------AQUI TERMINA LA MODIFICACION----------
	GOTO	LOOP		;DE AQUI SALTA A UN CICLO QUE REPITE LA SECUENCIA COMPLETA DE LA TABLA  VEES PARA LOGRAR UN MINUTO DE DURACION
	
LOOP
	CLRF	NUM_TABLA	;SE BORRA EL APUNTADOR PARA INICIAR UNA NUEVA SECUENCIA
	INCF	AUX		;SE AUMNTA UN CONTADOR AUXILIAR
	MOVLW	.5		;SE MUEVE UN 5 A W PARA COMPARARLO Y SABER SI YA SE CUMPLIERON 5 CICLOS
	XORWF	AUX,W
	BTFSS	STATUS,Z	;DE ACUERDO AL RESULTADO DE LA COMPARACION, SE VUELVE A LA 
	GOTO	TABLA		;SECUENCIA O SE SALTA AL INICIO DEL PROGRAMA
	GOTO	INICIO
        
	
TABLA_SEC1:
        ADDWF   PCL,F
        RETLW   0X81
        RETLW   0XC3
        RETLW   0XE7
        RETLW   0XFF
        RETLW   0X7E
        RETLW   0X3C
        RETLW   0X18
        RETLW   0X3C
	RETLW   0X7E
	RETLW   0XFF
	RETLW   0XE7
	RETLW   0XC3
	
COMPARA
	MOVLW	.255	    ;SE MUEVE U 25 AL REGISRO W
	XORWF	CONT,W	    ;SE COMPARA CON EL CONTENIDO DEL CONTADOR
	BTFSS	STATUS,Z    ;SE TESTEA LA BANDERA DE 0, QUE SE ACTIVA CUANDO LA OPERACION XOR ES VERDADER
	GOTO	CLEAR	    ;COMO AUN NO TERMINA EL CONTEO, GENERA EL CICLO HACIA CLEAR
	GOTO	TABLA	    ;CUANDO XOR ES 1, INDICA QUE EL CONTEO SE FINALIZO POR LO QUE ENVIA A UNA TABLA
			    ;QUE CONTIENE LA SECUENCIA DE FINALIZACION
	#include "tempo.inc"
	
	END